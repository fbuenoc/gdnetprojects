//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3623
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Data.Objects.DataClasses.EdmSchemaAttribute()]
[assembly: global::System.Data.Objects.DataClasses.EdmRelationshipAttribute("NHibernateTestInverseModel", "FK_Child_Parent", "Parent", global::System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataModelWithUser.Parent), "Child", global::System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataModelWithUser.Child))]

// Original file name:
// Generation date: 8/20/2011 9:38:44 AM
namespace DataModelWithUser
{
    
    /// <summary>
    /// There are no comments for NHibernateTestInverseEntities in the schema.
    /// </summary>
    public partial class NHibernateTestInverseEntities : global::System.Data.Objects.ObjectContext
    {
        /// <summary>
        /// Initializes a new NHibernateTestInverseEntities object using the connection string found in the 'NHibernateTestInverseEntities' section of the application configuration file.
        /// </summary>
        public NHibernateTestInverseEntities() : 
                base("name=NHibernateTestInverseEntities", "NHibernateTestInverseEntities")
        {
            this.OnContextCreated();
        }
        /// <summary>
        /// Initialize a new NHibernateTestInverseEntities object.
        /// </summary>
        public NHibernateTestInverseEntities(string connectionString) : 
                base(connectionString, "NHibernateTestInverseEntities")
        {
            this.OnContextCreated();
        }
        /// <summary>
        /// Initialize a new NHibernateTestInverseEntities object.
        /// </summary>
        public NHibernateTestInverseEntities(global::System.Data.EntityClient.EntityConnection connection) : 
                base(connection, "NHibernateTestInverseEntities")
        {
            this.OnContextCreated();
        }
        partial void OnContextCreated();
        /// <summary>
        /// There are no comments for Child in the schema.
        /// </summary>
        public global::System.Data.Objects.ObjectQuery<Child> Child
        {
            get
            {
                if ((this._Child == null))
                {
                    this._Child = base.CreateQuery<Child>("[Child]");
                }
                return this._Child;
            }
        }
        private global::System.Data.Objects.ObjectQuery<Child> _Child;
        /// <summary>
        /// There are no comments for Parent in the schema.
        /// </summary>
        public global::System.Data.Objects.ObjectQuery<Parent> Parent
        {
            get
            {
                if ((this._Parent == null))
                {
                    this._Parent = base.CreateQuery<Parent>("[Parent]");
                }
                return this._Parent;
            }
        }
        private global::System.Data.Objects.ObjectQuery<Parent> _Parent;
        /// <summary>
        /// There are no comments for Child in the schema.
        /// </summary>
        public void AddToChild(Child child)
        {
            base.AddObject("Child", child);
        }
        /// <summary>
        /// There are no comments for Parent in the schema.
        /// </summary>
        public void AddToParent(Parent parent)
        {
            base.AddObject("Parent", parent);
        }
    }
    /// <summary>
    /// There are no comments for NHibernateTestInverseModel.Child in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [global::System.Data.Objects.DataClasses.EdmEntityTypeAttribute(NamespaceName="NHibernateTestInverseModel", Name="Child")]
    [global::System.Runtime.Serialization.DataContractAttribute(IsReference=true)]
    [global::System.Serializable()]
    public partial class Child : global::System.Data.Objects.DataClasses.EntityObject
    {
        /// <summary>
        /// Create a new Child object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="name">Initial value of Name.</param>
        public static Child CreateChild(int id, string name)
        {
            Child child = new Child();
            child.Id = id;
            child.Name = name;
            return child;
        }
        /// <summary>
        /// There are no comments for Property Id in the schema.
        /// </summary>
        [global::System.Data.Objects.DataClasses.EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [global::System.Runtime.Serialization.DataMemberAttribute()]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                this.OnIdChanging(value);
                this.ReportPropertyChanging("Id");
                this._Id = global::System.Data.Objects.DataClasses.StructuralObject.SetValidValue(value);
                this.ReportPropertyChanged("Id");
                this.OnIdChanged();
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
        /// <summary>
        /// There are no comments for Property Name in the schema.
        /// </summary>
        [global::System.Data.Objects.DataClasses.EdmScalarPropertyAttribute(IsNullable=false)]
        [global::System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this._Name;
            }
            set
            {
                this.OnNameChanging(value);
                this.ReportPropertyChanging("Name");
                this._Name = global::System.Data.Objects.DataClasses.StructuralObject.SetValidValue(value, false);
                this.ReportPropertyChanged("Name");
                this.OnNameChanged();
            }
        }
        private string _Name;
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
        /// <summary>
        /// There are no comments for Parent in the schema.
        /// </summary>
        [global::System.Data.Objects.DataClasses.EdmRelationshipNavigationPropertyAttribute("NHibernateTestInverseModel", "FK_Child_Parent", "Parent")]
        [global::System.Xml.Serialization.XmlIgnoreAttribute()]
        [global::System.Xml.Serialization.SoapIgnoreAttribute()]
        [global::System.Runtime.Serialization.DataMemberAttribute()]
        public Parent Parent
        {
            get
            {
                return ((global::System.Data.Objects.DataClasses.IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Parent>("NHibernateTestInverseModel.FK_Child_Parent", "Parent").Value;
            }
            set
            {
                ((global::System.Data.Objects.DataClasses.IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Parent>("NHibernateTestInverseModel.FK_Child_Parent", "Parent").Value = value;
            }
        }
        /// <summary>
        /// There are no comments for Parent in the schema.
        /// </summary>
        [global::System.ComponentModel.BrowsableAttribute(false)]
        [global::System.Runtime.Serialization.DataMemberAttribute()]
        public global::System.Data.Objects.DataClasses.EntityReference<Parent> ParentReference
        {
            get
            {
                return ((global::System.Data.Objects.DataClasses.IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Parent>("NHibernateTestInverseModel.FK_Child_Parent", "Parent");
            }
            set
            {
                if ((value != null))
                {
                    ((global::System.Data.Objects.DataClasses.IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<Parent>("NHibernateTestInverseModel.FK_Child_Parent", "Parent", value);
                }
            }
        }
    }
    /// <summary>
    /// There are no comments for NHibernateTestInverseModel.Parent in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [global::System.Data.Objects.DataClasses.EdmEntityTypeAttribute(NamespaceName="NHibernateTestInverseModel", Name="Parent")]
    [global::System.Runtime.Serialization.DataContractAttribute(IsReference=true)]
    [global::System.Serializable()]
    public partial class Parent : global::System.Data.Objects.DataClasses.EntityObject
    {
        /// <summary>
        /// Create a new Parent object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="name">Initial value of Name.</param>
        public static Parent CreateParent(int id, string name)
        {
            Parent parent = new Parent();
            parent.Id = id;
            parent.Name = name;
            return parent;
        }
        /// <summary>
        /// There are no comments for Property Id in the schema.
        /// </summary>
        [global::System.Data.Objects.DataClasses.EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [global::System.Runtime.Serialization.DataMemberAttribute()]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                this.OnIdChanging(value);
                this.ReportPropertyChanging("Id");
                this._Id = global::System.Data.Objects.DataClasses.StructuralObject.SetValidValue(value);
                this.ReportPropertyChanged("Id");
                this.OnIdChanged();
            }
        }
        private int _Id;
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
        /// <summary>
        /// There are no comments for Property Name in the schema.
        /// </summary>
        [global::System.Data.Objects.DataClasses.EdmScalarPropertyAttribute(IsNullable=false)]
        [global::System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this._Name;
            }
            set
            {
                this.OnNameChanging(value);
                this.ReportPropertyChanging("Name");
                this._Name = global::System.Data.Objects.DataClasses.StructuralObject.SetValidValue(value, false);
                this.ReportPropertyChanged("Name");
                this.OnNameChanged();
            }
        }
        private string _Name;
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
        /// <summary>
        /// There are no comments for Child in the schema.
        /// </summary>
        [global::System.Data.Objects.DataClasses.EdmRelationshipNavigationPropertyAttribute("NHibernateTestInverseModel", "FK_Child_Parent", "Child")]
        [global::System.Xml.Serialization.XmlIgnoreAttribute()]
        [global::System.Xml.Serialization.SoapIgnoreAttribute()]
        [global::System.Runtime.Serialization.DataMemberAttribute()]
        public global::System.Data.Objects.DataClasses.EntityCollection<Child> Child
        {
            get
            {
                return ((global::System.Data.Objects.DataClasses.IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<Child>("NHibernateTestInverseModel.FK_Child_Parent", "Child");
            }
            set
            {
                if ((value != null))
                {
                    ((global::System.Data.Objects.DataClasses.IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<Child>("NHibernateTestInverseModel.FK_Child_Parent", "Child", value);
                }
            }
        }
    }
}
